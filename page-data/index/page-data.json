{"componentChunkName":"component---src-templates-docs-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Untangled Docs","docsLocation":"https://github.com/booysenn/docs.untangled.co.za/tree/master/content"}},"mdx":{"fields":{"id":"45fc4847-a464-5944-9b76-49ab950ad5ea","title":"Landing Page","slug":"/"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Landing Page\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hello explorer\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"parent":{"relativePath":"index.mdx","fields":{"gitLogLatestDate":"2023-02-13T21:45:48+00:00"}},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/setups/git-and-github","title":"Git and Github"}}},{"node":{"fields":{"slug":"/setups/gatsby","title":"Gatsby"}}},{"node":{"fields":{"slug":"/make/pylontech-sunsynk-canbus","title":"Pylontech to Sunsynk Canbus Cable"}}},{"node":{"fields":{"slug":"/setups","title":"Setups"}}},{"node":{"fields":{"slug":"/make","title":"Make"}}},{"node":{"fields":{"slug":"/","title":"Landing Page"}}}]}},"pageContext":{"id":"45fc4847-a464-5944-9b76-49ab950ad5ea"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}